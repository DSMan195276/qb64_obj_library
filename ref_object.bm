
!!include once

FUNCTION OBJ_ref_trait_get_type& ()
  STATIC added
  DIM t as OBJ_type_info
  if added = 0 then
    t.class_size = LEN(OBJ_ref_trait_class, TYPE)
    t.base_size = LEN(OBJ_ref_trait, TYPE)
    t.init = @SUB(OBJ_Ref_trait_init)
    t.class_init = @SUB(OBJ_ref_trait_class_init)
    t.destroy = @SUB(OBJ_ref_trait_destroy)
    t.flags = OBJ_TYPE_INFO_FLAG_IS_TRAIT
    added = OBJ_type_register_type&(t)
  end if
  OBJ_ref_trait_get_type& = added
END FUNCTION

SUB OBJ_ref_trait_init (this as _OFFSET)
  @(this, OBJ_ref_trait.ref_count) = 0
END SUB

SUB OBJ_ref_trait_class_init (class as _OFFSET)
  @(class, OBJ_ref_trait_class.get_ref) = @FUNCTION(OBJ_ref_trait_private_get_ref%&)
  @(class, OBJ_ref_trait_class.release_ref) = @SUB(OBJ_ref_trait_private_release_ref)
END SUB

FUNCTION OBJ_ref_trait_private_get_ref%& (this as _OFFSET)
  @(this, OBJ_ref_trait.ref_count) = @(this, OBJ_ref_trait.ref_count) + 1
  OBJ_ref_trait_private_get_ref%& = this
END FUNCTION

SUB OBJ_ref_trait_private_release_ref (this as _OFFSET)
  @(this, OBJ_ref_trakt.ref_count) = @(this, OBJ_ref_trait.ref_count) - 1
  if @(this, OBJ_ref_trait.ref_count) = 0 then 
    OBJ_destroy this
  end if
END SUB

SUB OBJ_ref_trait_destroy (this as _OFFSET)
  @(this, OBJ_ref_trait.ref_count) = 0
END SUB


